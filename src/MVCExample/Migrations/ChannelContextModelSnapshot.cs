// <auto-generated />
using MVCExample.Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace MVCExample.Migrations
{
    [DbContext(typeof(ChannelContext))]
    partial class ChannelContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.2");

            modelBuilder.Entity("MVCExample.Entities.ChannelModel", b =>
                {
                    b.Property<int>("ChannelId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("CHANNEL_ID");

                    b.Property<string>("ChannelName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT")
                        .HasColumnName("CHANNEL_NAME");

                    b.Property<string>("Endpoint")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT")
                        .HasColumnName("END_POINT");

                    b.Property<string>("SecretKey")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT")
                        .HasColumnName("SECRET_KEY");

                    b.Property<string>("TokenKey")
                        .HasColumnType("TEXT")
                        .HasColumnName("TOKEN_KEY");

                    b.HasKey("ChannelId")
                        .HasName("PK_Channel");

                    b.ToTable("M_CHANNEL");
                });

            modelBuilder.Entity("MVCExample.Entities.EventModel", b =>
                {
                    b.Property<int>("EventId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("EVENT_ID");

                    b.Property<string>("EventName")
                        .HasMaxLength(255)
                        .HasColumnType("TEXT")
                        .HasColumnName("EVENT_NAME");

                    b.Property<string>("EventUrl")
                        .HasMaxLength(1000)
                        .HasColumnType("TEXT")
                        .HasColumnName("EVENT_URL");

                    b.HasKey("EventId")
                        .HasName("PK_Event");

                    b.ToTable("ZZ_EVENT");

                    b.HasData(
                        new
                        {
                            EventId = 809,
                            EventName = "รับเข้าระบบ/collection mail",
                            EventUrl = "/api/collection/mail"
                        },
                        new
                        {
                            EventId = 815,
                            EventName = "บันทึกผลจัดส่ง/proof of delivery",
                            EventUrl = "/api/delivery/proof"
                        });
                });

            modelBuilder.Entity("MVCExample.Entities.SubscribeModel", b =>
                {
                    b.Property<int>("ChannelId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("CHANNEL_ID");

                    b.Property<int>("EventId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("EVENT_ID");

                    b.Property<string>("EventName")
                        .HasMaxLength(255)
                        .HasColumnType("TEXT")
                        .HasColumnName("EVENT_NAME");

                    b.HasKey("ChannelId", "EventId")
                        .HasName("PK_Subscribe");

                    b.ToTable("M_SUBSCRIBE");
                });
#pragma warning restore 612, 618
        }
    }
}
